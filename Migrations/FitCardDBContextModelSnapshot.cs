// <auto-generated />
using System;
using FitCard.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FitCard.Migrations
{
    [DbContext(typeof(FitCardDBContext))]
    partial class FitCardDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FitCard.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaNome")
                        .HasMaxLength(40);

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FitCard.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId");

                    b.Property<string>("EmpresaAgencia")
                        .HasMaxLength(5);

                    b.Property<string>("EmpresaCNPJ")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("EmpresaCidade")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaConta")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("EmpresaDataCadastro");

                    b.Property<string>("EmpresaEmail")
                        .HasMaxLength(100);

                    b.Property<string>("EmpresaEndereco")
                        .HasMaxLength(150);

                    b.Property<string>("EmpresaEstado")
                        .HasMaxLength(40);

                    b.Property<string>("EmpresaNomeFantasia")
                        .HasMaxLength(100);

                    b.Property<string>("EmpresaRazao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EmpresaStatus")
                        .HasMaxLength(3);

                    b.Property<string>("EmpresaTelefone")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("FitCard.Models.Empresa", b =>
                {
                    b.HasOne("FitCard.Models.Categoria", "Categoria")
                        .WithMany("Empresas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
